// paste into sequencediagram.org

title Rotakka
participant Master
actor Initiator
actor ProxyChecker
actor ProxySyncer
actor ProxyCrawler
actor ProxyCrawlerTaskDistributor
database Replicator
actor WebsiteCrawlerTaskDistributor
actor WebsiteCrawler

entryspacing 0.7
Master->>Initiator: DistributeConfiguration

expandable- AddingProxyCrawlingTasks
Initiator->>ProxyCrawlerTaskDistributor: AddCrawlers
note over ProxyCrawlerTaskDistributor: put proxy crawling tasks\ninto local task queue
note right of ProxyCrawlerTaskDistributor: task queue should be an ordered set\nlater random access and updates are required
note over ProxyCrawlerTaskDistributor:eventually perform redundancy checking, somehow...
note right of ProxyCrawlerTaskDistributor:reply to sender
ProxyCrawlerTaskDistributor-->>Initiator:AddedCrawlers
alt now
ProxyCrawlerTaskDistributor->>ProxyCrawlerTaskDistributor: BalanceGlobalProxyCrawlingTasksQueue
else on schedule
[->>ProxyCrawlerTaskDistributor: BalanceGlobalProxyCrawlingTasksQueue
end
expandable+ BalanceDistributedTaskQueue
note over ProxyCrawlerTaskDistributor: add sender to balancing response queue

ProxyCrawlerTaskDistributor->>Replicator: GetProxyCrawlerTaskQueueSize
Replicator-->>ProxyCrawlerTaskDistributor: ProxyCrawlerTaskQueueSize

note right of ProxyCrawlerTaskDistributor: keep only some\npercentage in local queue

note over ProxyCrawlerTaskDistributor: eventually fill global queue
ProxyCrawlerTaskDistributor->>Replicator: PutProxyCrawlingTasks

note over ProxyCrawlerTaskDistributor: eventually empty global queue
ProxyCrawlerTaskDistributor->>Replicator: TakeProxyCrawlingTasks
note right of ProxyCrawlerTaskDistributor: to be reliable in case of crashes only mark \ntask as 'worked on'
ProxyCrawlerTaskDistributor->>Replicator: SetProxyCrawlerTaskQueueSize
loop every sender in response queue
note over ProxyCrawlerTaskDistributor:respond
ProxyCrawlerTaskDistributor-->>ProxyCrawlerTaskDistributor: GlobalProxyCrawlingTasksQueueBalancingResult
end
note right of ProxyCrawlerTaskDistributor: received GlobalProxyCrawlingTasksQueueBalancingResult
loop worker queue and task queue
ProxyCrawlerTaskDistributor->>ProxyCrawler: ProxyCrawlingTask

end
alt not enough work
note right of ProxyCrawlerTaskDistributor: trigger global rebalancing
ProxyCrawlerTaskDistributor->>ProxyCrawlerTaskDistributor: BalanceGlobalProxyCrawlingTasksQueue
ref over ProxyCrawlerTaskDistributor:BalanceDistributedTaskQueue
note right of ProxyCrawlerTaskDistributor: will automatically assign \nwork if new work is found
end
end

ProxyCrawlerTaskDistributor-->>Initiator:DistributedCrawlers
alt received proxy crawling task
ref over ProxyCrawler: ProxyCrawlingTask
end
end

expandable- AddingWebsiteCrawlingTasks
Initiator->>WebsiteCrawlerTaskDistributor: AddCrawlingTasks
note over WebsiteCrawlerTaskDistributor:put website crawling tasks into local queue
note right of WebsiteCrawlerTaskDistributor:task queue should be an ordered set\nlater random access and updates are required
note right of WebsiteCrawlerTaskDistributor: reply to sender
WebsiteCrawlerTaskDistributor-->>Initiator:AddedCrawlingTasks

alt now
WebsiteCrawlerTaskDistributor->>WebsiteCrawlerTaskDistributor:BalanceGlobalWebsiteCrawlingTasksQueue
else on schedule
[->>WebsiteCrawlerTaskDistributor: BalanceGlobalWebsiteCrawlingTasksQueue
end
ref over WebsiteCrawler, Replicator:BalanceDistributedTaskQueue
WebsiteCrawlerTaskDistributor-->>Initiator:DistributedCrawlingTasks

alt received website crawling task
ref over WebsiteCrawler:WebsiteCrawlingTask
end
end

expandable- ExecuteProxyCrawlingTask
[-->>ProxyCrawler:on creation
ProxyCrawler->>ProxyCrawlerTaskDistributor: GetProxyCrawlingTask
alt no work available
note over ProxyCrawlerTaskDistributor: add proxy crawler into worker queue
else work available
note over ProxyCrawlerTaskDistributor: assign work
ProxyCrawlerTaskDistributor->>ProxyCrawler:ProxyCrawlingTask

group ProxyCrawlingTask
note over ProxyCrawler: crawl proxy website
ProxyCrawler->>ProxySyncer:CrawledProxies
ProxyCrawler-->>ProxyCrawlerTaskDistributor: ProxyCrawlingTaskStatus
note over ProxyCrawlerTaskDistributor:update task status
alt task failed
ProxyCrawlerTaskDistributor->>Replicator: RemoveProxyCrawlingTask
end

note over ProxySyncer:unite proxies with already known ones
note over ProxySyncer:add unknown proxies to unknown status set
note right of ProxySyncer:make previously unknown \nProxies globally known
ProxySyncer->>Replicator:PutProxyCheckingTasks


alt now
ProxySyncer->>ProxySyncer:BalanceGlobalProxyCheckingTasksQueue
else on schedule
[->>ProxySyncer: BalanceGlobalProxyCheckingTasksQueue
end

ref over ProxyChecker,Replicator: BalanceDistributedTaskQueue
alt received proxy checking task
ref over ProxyChecker: ProxyCheckingTask
end
end
end
end

expandable- ExecuteProxyCheckingTask
[-->>ProxyChecker:on creation
ProxyChecker->>ProxySyncer:GetProxyCheckingTask
alt no work available
note over ProxySyncer:add proxy checker to worker queue
else work available
note over ProxySyncer:assign work
ProxySyncer->>ProxyChecker:ProxyCheckingTask
ref over ProxyChecker:ProxyCheckingTask
end

group ProxyCheckingTask
ProxySyncer->>ProxyChecker: ProxyCheckingTask
note over ProxyChecker: check proxy
ProxyChecker-->>ProxySyncer:ProxyAvailability
note over ProxySyncer: add Proxy\nto Queue
ProxySyncer->>Replicator: SetProxyAvailability
end
end

group GetProxies
[->>ProxySyncer: on schedule
ProxySyncer->>Replicator: GetProxies
Replicator-->>ProxySyncer: Proxies
note over ProxySyncer: update available Proxies
end

WebsiteCrawler->>WebsiteCrawlerTaskDistributor:  GetWebsiteCrawlingTask
WebsiteCrawlerTaskDistributor-->>WebsiteCrawler: WebsiteCrawlingTask

WebsiteCrawler->>ProxySyncer: GetProxy
ProxySyncer-->>WebsiteCrawler: Proxy
note over WebsiteCrawler: crawl website

